// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TraiderMagazine.ProductAPI.DbContexts;

#nullable disable

namespace TraiderMagazine.ProductAPI.Migrations
{
    [DbContext(typeof(ProductContext))]
    [Migration("20220427184721_AddDataToDb")]
    partial class AddDataToDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0-preview.3.22175.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TraiderMagazine.ProductAPI.Models.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CategoryName = "Штурмовые винтовки",
                            Description = "Бесшумный карабин M4A1 оснащен менее вместительным магазином",
                            ImageUrl = "https://1drv.ms/u/s!AgoI2Zxw869CwSgpfHSfUziogxWM?e=bv6Pna",
                            Name = "M4A1-S",
                            Price = 116.0
                        },
                        new
                        {
                            Id = 2L,
                            CategoryName = "Штурмовые винтовки",
                            Description = "Бесшумный карабин M4A1 оснащен менее вместительным магазином. Смешанный камуфляж",
                            ImageUrl = "https://1drv.ms/u/s!AgoI2Zxw869CwSrcvNa-z1INBRwL?e=bZrenf",
                            Name = "Сувенирный M4A1-S",
                            Price = 250.0
                        },
                        new
                        {
                            Id = 3L,
                            CategoryName = "Штурмовые винтовки",
                            Description = "Бесшумный карабин M4A1 оснащен менее вместительным магазином. На оружие нанесено изображение василиска",
                            ImageUrl = "https://1drv.ms/u/s!AgoI2Zxw869CwSkJL3PXWFcD1bFB?e=regYTd",
                            Name = "M4A1-S | Василиск",
                            Price = 200.0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
